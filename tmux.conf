set -g prefix C-q 
bind C-q send-prefix

# move pane like a vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize current pane
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# mouse mode on
setw -g mouse on
bind-key m if-shell "tmux show-options -g mouse | grep off" "set-option -g mouse on" "set-option -g mouse off"

bind V split-window -h
bind S split-window -v

# reload config
bind R  source-file ~/.tmux.conf \; display "ReloadConfig!"

# start pane and window by 1
set -g base-index 1
setw -g pane-base-index 1
set-window-option -g mode-keys vi

#following option is invalid
#set-window-option -g utf8 on

# set border of each pane
set -g pane-border-style fg="green"
set -g pane-border-style bg="black"

# emphasizes active pane
set -g pane-active-border-style fg="white"
set -g pane-active-border-style bg="yellow"

# set status bar color
set -g status-fg white
set -g status-bg black

# set color of window list
setw -g window-status-style fg="cyan"
setw -g window-status-style bg="default"
setw -g window-status-style "dim"

# emphasizes active window
setw -g window-status-current-style fg="white"
setw -g window-status-current-style bg="red"
setw -g window-status-current-style bg="red"
setw -g window-status-current-style "bright"

# put status bar on top of window
set -g status-position top

# set copy mode key
bind y copy-mode
bind p paste-buffer

# set color of commandline
set -g message-style fg="white"
set -g message-style bg="black"
set -g message-style "bright"

set-option -g default-terminal "xterm"

# ===== logging =====
#
# C-b C-p Start logging.
bind-key C-p pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%Y_%%m%%d_%%H%%M%%S_%%N\")] \${LINE}\" >> \${HOME}/.tmux/log/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "' \; display-message "Logging start."
# C-b C-o Stop logging
bind-key C-o pipe-pane \; display-message "Logging end."
# C-b v Open new window. Logging always. (-n is set window name.)
bind-key v new-window -n 'logging...' \; pipe-pane -o '/bin/sh -c "while read -r LINE; do echo \"[\$(date +\"%%Y_%%m%%d_%%H%%M%%S_%%N\")] \${LINE}\" >> \${HOME}/.tmux/log/\$(date +%Y%m%d-%H%M%S)-#S-#I.#P.log; done "'

